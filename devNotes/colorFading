    def incrementHex(hex_str, increment): #with hex_str in format "#FFFFFF" or any colour
        red = int(hex_str[1:3],16) #specifies base for integer conversion
        green = int(hex_str[3:5],16)
        blue = int(hex_str[5:],16)
        red += increment #increment can be negative
        green += increment
        blue += increment
        new_hex_str = "#" + str(hex(red)) + str(hex(blue)) + str(hex(green))
        return new_hex_str

    def Fade(self, start_hex, increment):
        new_hex = self.incrementHex(start_hex, increment)
        self.User_Line.configure(bg = new_hex)
        #where self.master is the parent widget as defined in the __init__ method...
        self.master.after(50,lambda: self.Fade(new_hex, increment)) #or any time interval in milliseconds
        #you'll probably need some code to stop it fading here, but I'll let you tackle that one :)

    def User_Line_Focus_In(self, event):
        self.Fade("#FFFFFF",-1) #could be any colour and increment